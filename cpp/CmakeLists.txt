# # CMakeのバージョンを設定
cmake_minimum_required(VERSION 3.14)
# # プロジェクト名と使用する言語を設定
project(ARModel CXX)
add_executable(exec predict.cpp AR.cpp functions.cpp)

#includeパス
target_include_directories(exec PUBLIC /usr/include/python3.10)

#libディレクトリを指定
link_directories($/usr/lib/python3.10)

#ライブラリを作成
add_library(cnpy SHARED "cnpy/cnpy.cpp")

#ライブラリをリンクp
target_link_libraries(exec PUBLIC python3.10 cnpy z)
#リンカのライブラリ検索ポリシーを設定
if(COMMAND cmake_policy)
cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)


set(CMAKE_NO_CACHE TRUE)
set(CMAKE_C_COMPILER "gcc")
set(CMAKE_CXX_COMPILER "g++")
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
#コンパイルオプション
set(CMAKE_CXX_FLAGS "-std=c++20 -O3 -fopenmp -mtune=native -march=native -I/usr/include/python3.10")


# cmake_minimum_required(VERSION 3.14)

# project(ARModel CXX)

# add_executable(exec main.cpp AR.cpp)

# add_library(cnpy SHARED "cnpy/cnpy.cpp")

# target_include_directories(exec PUBLIC /opt/homebrew/Cellar/python@3.10/3.10.13_1/Frameworks/Python.framework/Versions/3.10/include/python3.10)

# link_directories(/opt/homebrew/Cellar/python@3.10/3.10.13_1/Frameworks/Python.framework/Versions/3.10/lib/python3.10)

# target_link_libraries(exec PUBLIC cnpy z python3.10)

# set(CMAKE_NO_CACHE TRUE)
# set(CMAKE_CXX_COMPILER "g++")
# set(CMAKE_CXX_STANDARD 20)
# set(CMAKE_CXX_FLAGS "-O3 -fopenmp -mtune=native -march=native -I/opt/homebrew/Cellar/python@3.10/3.10.13_1/Frameworks/Python.framework/Versions/3.10/include/python3.10 -L/opt/homebrew/Cellar/python@3.10/3.10.13_1/Frameworks/Python.framework/Versions/3.10/lib/python3.10 -lpython3.10")
